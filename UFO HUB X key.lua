----------------------------------------------------------------
-- [ADD BLOCK] ‚Äî SAFE BOOSTERS / DEBUG / EXTRA BUTTONS
-- ‡∏ß‡∏≤‡∏á "‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢" ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏° (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô)
----------------------------------------------------------------

-- ===== Debug flags (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ) =====
_G.UFO_HUBX_DEBUG          = _G.UFO_HUBX_DEBUG ~= nil and _G.UFO_HUBX_DEBUG or true   -- log ‡πÄ‡∏û‡∏¥‡πà‡∏°
_G.UFO_HUBX_KEEP_UI        = _G.UFO_HUBX_KEEP_UI or false  -- true = ‡πÑ‡∏°‡πà destroy ‡∏ï‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå (‡∏ã‡πà‡∏≠‡∏ô‡πÑ‡∏ß‡πâ‡πÄ‡∏â‡∏¢‡πÜ)
_G.UFO_HUBX_FORCE_TOPMOST  = _G.UFO_HUBX_FORCE_TOPMOST or true  -- true = ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ gui ‡∏≠‡∏¢‡∏π‡πà CoreGui ‡πÄ‡∏™‡∏°‡∏≠

local function dbg(...)
    if _G.UFO_HUBX_DEBUG then
        print("[UFO-HUB-X/DBG]", ...)
    end
end

-- ===== Watchdog: ‡∏ñ‡πâ‡∏≤ UI ‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô/‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢ parent ‡∏ú‡∏¥‡∏î ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏µ‡πà CoreGui =====
task.defer(function()
    local tries = 0
    while tries < 60 do
        tries += 1
        if not gui or not gui.Parent then
            pcall(function()
                if gethui then
                    gui.Parent = gethui()
                else
                    gui.Parent = CG
                end
            end)
        end
        if gui then
            gui.Enabled = true
            gui.DisplayOrder = 1_000_000
            gui.IgnoreGuiInset = true
        end
        if _G.UFO_HUBX_FORCE_TOPMOST and gui and gui.Parent ~= CG and not gethui then
            pcall(function() gui.Parent = CG end)
        end
        if tries == 1 then
            dbg("GUI parent is", gui and gui.Parent)
        end
        task.wait(0.2)
    end
end)

-- ===== ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ "‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏•‡∏≤‡∏¢" UI ‡∏ï‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå ‡πÉ‡∏´‡πâ Override fadeOutAndDestroy ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏à‡∏£‡∏¥‡∏á =====
if _G.UFO_HUBX_KEEP_UI and type(fadeOutAndDestroy) == "function" then
    local __origFade = fadeOutAndDestroy
    fadeOutAndDestroy = function()
        dbg("KEEP_UI enabled -> hide instead of destroy")
        pcall(function()
            panel.Visible = false
            panel.BackgroundTransparency = 1
        end)
        -- ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÇ‡∏ä‡∏ß‡πå‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å _G.UFO_ShowKeyUI()
    end
    _G.UFO_ShowKeyUI = function()
        pcall(function()
            panel.Visible = true
            panel.BackgroundTransparency = 0
            tween(panel, {Position = UDim2.fromScale(0.5,0.5)}, .18)
        end)
    end
end

-- ===== ‡∏õ‡∏∏‡πà‡∏°/‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà ‚Äú‡πÄ‡∏õ‡∏¥‡∏î UI ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‚Äù (‡∏Å‡∏£‡∏ì‡∏µ‡∏õ‡∏¥‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß) =====
local reopenBtn = make("TextButton", {
    Parent = gui,
    Text = "UFO Key",
    Font = Enum.Font.GothamBold,
    TextSize = 12,
    TextColor3 = Color3.new(1,1,1),
    AutoButtonColor = true,
    BackgroundColor3 = Color3.fromRGB(25,25,25),
    BorderSizePixel = 0,
    Size = UDim2.fromOffset(76, 24),
    Position = UDim2.new(1, -86, 0, 8),
    Visible = true,
    ZIndex = 999999
},{
    make("UICorner",{CornerRadius=UDim.new(0,8)}),
    make("UIStroke",{Color=ACCENT, Transparency=0.4})
})
reopenBtn.MouseButton1Click:Connect(function()
    if panel then
        panel.Visible = true
        tween(panel, {BackgroundTransparency = 0}, .12)
    end
end)

-- ===== ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏°‡∏∏‡∏°‡∏•‡πà‡∏≤‡∏á (‡∏û‡∏¥‡∏á /status) =====
local serverStatus = make("TextLabel", {
    Parent = panel,
    BackgroundTransparency = 1,
    Size = UDim2.new(1,-56,0,18),
    Position = UDim2.new(0, 28, 1, -44),
    Font = Enum.Font.Gotham,
    TextSize = 13,
    TextXAlignment = Enum.TextXAlignment.Left,
    Text = "Server: checking...",
    TextColor3 = Color3.fromRGB(160,160,160),
    ZIndex = 9,
}, {})
task.defer(function()
    local ok, data = json_get_with_failover("/status")
    if ok and data and data.ok then
        serverStatus.Text = "Server: online ‚úì"
        serverStatus.TextColor3 = Color3.fromRGB(120,255,170)
    else
        serverStatus.Text = "Server: offline (retry on submit)"
        serverStatus.TextColor3 = Color3.fromRGB(255,140,140)
    end
end)

-- ===== ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏ô‡πâ‡∏≤ UI ‡∏à‡∏£‡∏¥‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏° uid/place =====
local function makeUiLink()
    local uid   = tostring(LP and LP.UserId or "")
    local place = tostring(game.PlaceId or "")
    return string.format("%s/index.html?uid=%s&place=%s",
        (SERVER_BASES[1] or ""),
        HttpService:UrlEncode(uid),
        HttpService:UrlEncode(place)
    )
end

-- ===== ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏¢‡∏Å: API Link / UI Link =====
-- (‡πÑ‡∏°‡πà‡πÑ‡∏õ‡∏¢‡∏∏‡πà‡∏á‡∏Å‡∏±‡∏ö handler ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ)
local btnRow = make("Frame", {
    Parent = panel,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -56, 0, 40),
    Position = UDim2.new(0,28,0,324),
    ZIndex = 4
}, {
    make("UIListLayout", {
        FillDirection = Enum.FillDirection.Horizontal,
        HorizontalAlignment = Enum.HorizontalAlignment.Left,
        VerticalAlignment = Enum.VerticalAlignment.Center,
        Padding = UDim.new(0, 10),
    })
})

local btnCopyApi = make("TextButton", {
    Parent=btnRow, Text="üìã Copy API Link",
    Font=Enum.Font.Gotham, TextSize=14,
    TextColor3=Color3.new(1,1,1), AutoButtonColor=false,
    BackgroundColor3=SUB, BorderSizePixel=0,
    Size=UDim2.new(0, 160, 0, 38)
},{
    make("UICorner",{CornerRadius=UDim.new(0,10)}),
    make("UIStroke",{Color=ACCENT, Transparency=0.7})
})
btnCopyApi.MouseButton1Click:Connect(function()
    local uid   = tostring(LP and LP.UserId or "")
    local place = tostring(game.PlaceId or "")
    local base  = SERVER_BASES[1] or ""
    local api   = string.format("%s/getkey?uid=%s&place=%s", base,
        HttpService:UrlEncode(uid), HttpService:UrlEncode(place))
    setClipboard(api)
    btnCopyApi.Text = "‚úÖ Copied!"
    task.delay(1.2, function() btnCopyApi.Text = "üìã Copy API Link" end)
end)

local btnOpenUi = make("TextButton", {
    Parent=btnRow, Text="üåê Open Key UI",
    Font=Enum.Font.GothamBold, TextSize=16,
    TextColor3=Color3.new(1,1,1), AutoButtonColor=false,
    BackgroundColor3=SUB, BorderSizePixel=0,
    Size=UDim2.new(0, 180, 0, 38)
},{
    make("UICorner",{CornerRadius=UDim.new(0,10)}),
    make("UIStroke",{Color=ACCENT, Transparency=0.6})
})
btnOpenUi.MouseButton1Click:Connect(function()
    local uiUrl = makeUiLink()
    local opened = false
    local ok1 = pcall(function()
        if GuiService and GuiService.OpenBrowserWindow then
            GuiService:OpenBrowserWindow(uiUrl); opened = true
        end
    end)
    if not ok1 or not opened then
        if syn and syn.open_url then
            pcall(function() syn.open_url(uiUrl); opened = true end)
        end
    end
    setClipboard(uiUrl) -- ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏™‡∏°‡∏≠
    if opened then
        btnOpenUi.Text = "‚úÖ Opened UI"
    else
        btnOpenUi.Text = "‚úÖ Copied UI Link"
    end
    task.delay(1.4, function() btnOpenUi.Text = "üåê Open Key UI" end)
end)

-- ===== ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡πá‡∏Å +48H ‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏î‡∏¥‡∏° (‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á verify/extend ‡∏ù‡∏±‡πà‡∏á server ‡πÅ‡∏•‡πâ‡∏ß) =====
local btnExtend = make("TextButton", {
    Parent=panel, Text="‚è≥ +48H",
    Font=Enum.Font.GothamBold, TextSize=14,
    TextColor3=Color3.new(1,1,1), AutoButtonColor=true,
    BackgroundColor3=SUB, BorderSizePixel=0,
    Size=UDim2.fromOffset(70, 28),
    Position=UDim2.new(1, -56-70, 1, -52),
    ZIndex=6
},{
    make("UICorner",{CornerRadius=UDim.new(0,8)}),
    make("UIStroke",{Color=ACCENT, Transparency=0.6})
})
btnExtend.MouseButton1Click:Connect(function()
    local uid   = tostring(LP and LP.UserId or "")
    local key   = tostring(_G.UFO_HUBX_KEY or "")
    if key == "" then
        showToast("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏ä‡πâ‡πÉ‡∏ô session", false); return
    end
    setStatus("‡∏Ç‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏µ‡∏¢‡πå...", nil)
    local qs = string.format("/extend?key=%s&uid=%s",
        HttpService:UrlEncode(key),
        HttpService:UrlEncode(uid))
    local ok, data = json_get_with_failover(qs)
    if ok and data and data.ok then
        showToast("‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úì", true)
        setStatus("‡∏Ñ‡∏µ‡∏¢‡πå‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏‡∏à‡∏ô‡∏ñ‡∏∂‡∏á: "..tostring(data.expires_at), true)
    else
        showToast("‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", false)
        setStatus("extend ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", false)
    end
end)

-- ===== ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á/‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î =====
task.defer(function()
    tween(panel, {Position = UDim2.fromScale(0.5,0.5)}, .18)
    dbg("Key UI Loaded OK, parent:", gui and gui.Parent)
end)

----------------------------------------------------------------
-- [END ADD BLOCK]
----------------------------------------------------------------
